#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LINQDemo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EbookCreation")]
	public partial class EbookDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProjectDataModel(ProjectDataModel instance);
    partial void UpdateProjectDataModel(ProjectDataModel instance);
    partial void DeleteProjectDataModel(ProjectDataModel instance);
    partial void InsertUserDataModel(UserDataModel instance);
    partial void UpdateUserDataModel(UserDataModel instance);
    partial void DeleteUserDataModel(UserDataModel instance);
    partial void InsertTab1(Tab1 instance);
    partial void UpdateTab1(Tab1 instance);
    partial void DeleteTab1(Tab1 instance);
    partial void InsertTab2(Tab2 instance);
    partial void UpdateTab2(Tab2 instance);
    partial void DeleteTab2(Tab2 instance);
    partial void InsertTab3(Tab3 instance);
    partial void UpdateTab3(Tab3 instance);
    partial void DeleteTab3(Tab3 instance);
    #endregion
		
		public EbookDataContext() : 
				base(global::LINQDemo.Properties.Settings.Default.EbookCreationConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EbookDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EbookDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EbookDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EbookDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ProjectDataModel> ProjectDataModels
		{
			get
			{
				return this.GetTable<ProjectDataModel>();
			}
		}
		
		public System.Data.Linq.Table<UserDataModel> UserDataModels
		{
			get
			{
				return this.GetTable<UserDataModel>();
			}
		}
		
		public System.Data.Linq.Table<Tab1> Tab1s
		{
			get
			{
				return this.GetTable<Tab1>();
			}
		}
		
		public System.Data.Linq.Table<Tab2> Tab2s
		{
			get
			{
				return this.GetTable<Tab2>();
			}
		}
		
		public System.Data.Linq.Table<Tab3> Tab3s
		{
			get
			{
				return this.GetTable<Tab3>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchProjects")]
		public ISingleResult<SearchProjectsResult> SearchProjects([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string filterProjectName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string filterUserName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string filterAuthorName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(500)")] string filterBookName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string filterStatusName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string filterFileName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, filterProjectName, filterUserName, filterAuthorName, filterBookName, filterStatusName, filterFileName);
			return ((ISingleResult<SearchProjectsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class ProjectDataModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _StatusID;
		
		private int _UserID;
		
		private string _Name;
		
		private System.DateTime _CreationDate;
		
		private string _RootPath;
		
		private EntityRef<UserDataModel> _UserDataModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnRootPathChanging(string value);
    partial void OnRootPathChanged();
    #endregion
		
		public ProjectDataModel()
		{
			this._UserDataModel = default(EntityRef<UserDataModel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserDataModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootPath", DbType="VarChar(1000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RootPath
		{
			get
			{
				return this._RootPath;
			}
			set
			{
				if ((this._RootPath != value))
				{
					this.OnRootPathChanging(value);
					this.SendPropertyChanging();
					this._RootPath = value;
					this.SendPropertyChanged("RootPath");
					this.OnRootPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDataModel_ProjectDataModel", Storage="_UserDataModel", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public UserDataModel UserDataModel
		{
			get
			{
				return this._UserDataModel.Entity;
			}
			set
			{
				UserDataModel previousValue = this._UserDataModel.Entity;
				if (((previousValue != value) 
							|| (this._UserDataModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserDataModel.Entity = null;
						previousValue.ProjectDataModels.Remove(this);
					}
					this._UserDataModel.Entity = value;
					if ((value != null))
					{
						value.ProjectDataModels.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserDataModel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class UserDataModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RoleID;
		
		private System.Data.Linq.Link<string> _Name;
		
		private string _Password;
		
		private bool _IsActive;
		
		private EntitySet<ProjectDataModel> _ProjectDataModels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public UserDataModel()
		{
			this._ProjectDataModels = new EntitySet<ProjectDataModel>(new Action<ProjectDataModel>(this.attach_ProjectDataModels), new Action<ProjectDataModel>(this.detach_ProjectDataModels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name.Value;
			}
			set
			{
				if ((this._Name.Value != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name.Value = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDataModel_ProjectDataModel", Storage="_ProjectDataModels", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ProjectDataModel> ProjectDataModels
		{
			get
			{
				return this._ProjectDataModels;
			}
			set
			{
				this._ProjectDataModels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectDataModels(ProjectDataModel entity)
		{
			this.SendPropertyChanging();
			entity.UserDataModel = this;
		}
		
		private void detach_ProjectDataModels(ProjectDataModel entity)
		{
			this.SendPropertyChanging();
			entity.UserDataModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tab1")]
	public partial class Tab1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private EntitySet<Tab3> _Tab3s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Tab1()
		{
			this._Tab3s = new EntitySet<Tab3>(new Action<Tab3>(this.attach_Tab3s), new Action<Tab3>(this.detach_Tab3s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab1_Tab3", Storage="_Tab3s", ThisKey="ID", OtherKey="Tab1Id")]
		public EntitySet<Tab3> Tab3s
		{
			get
			{
				return this._Tab3s;
			}
			set
			{
				this._Tab3s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tab3s(Tab3 entity)
		{
			this.SendPropertyChanging();
			entity.Tab1 = this;
		}
		
		private void detach_Tab3s(Tab3 entity)
		{
			this.SendPropertyChanging();
			entity.Tab1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tab2")]
	public partial class Tab2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private EntitySet<Tab3> _Tab3s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Tab2()
		{
			this._Tab3s = new EntitySet<Tab3>(new Action<Tab3>(this.attach_Tab3s), new Action<Tab3>(this.detach_Tab3s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab2_Tab3", Storage="_Tab3s", ThisKey="ID", OtherKey="Tab2Id")]
		public EntitySet<Tab3> Tab3s
		{
			get
			{
				return this._Tab3s;
			}
			set
			{
				this._Tab3s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tab3s(Tab3 entity)
		{
			this.SendPropertyChanging();
			entity.Tab2 = this;
		}
		
		private void detach_Tab3s(Tab3 entity)
		{
			this.SendPropertyChanging();
			entity.Tab2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tab3")]
	public partial class Tab3 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Tab1Id;
		
		private int _Tab2Id;
		
		private EntityRef<Tab1> _Tab1;
		
		private EntityRef<Tab2> _Tab2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTab1IdChanging(int value);
    partial void OnTab1IdChanged();
    partial void OnTab2IdChanging(int value);
    partial void OnTab2IdChanged();
    #endregion
		
		public Tab3()
		{
			this._Tab1 = default(EntityRef<Tab1>);
			this._Tab2 = default(EntityRef<Tab2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tab1Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Tab1Id
		{
			get
			{
				return this._Tab1Id;
			}
			set
			{
				if ((this._Tab1Id != value))
				{
					if (this._Tab1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTab1IdChanging(value);
					this.SendPropertyChanging();
					this._Tab1Id = value;
					this.SendPropertyChanged("Tab1Id");
					this.OnTab1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tab2Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Tab2Id
		{
			get
			{
				return this._Tab2Id;
			}
			set
			{
				if ((this._Tab2Id != value))
				{
					if (this._Tab2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTab2IdChanging(value);
					this.SendPropertyChanging();
					this._Tab2Id = value;
					this.SendPropertyChanged("Tab2Id");
					this.OnTab2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab1_Tab3", Storage="_Tab1", ThisKey="Tab1Id", OtherKey="ID", IsForeignKey=true)]
		public Tab1 Tab1
		{
			get
			{
				return this._Tab1.Entity;
			}
			set
			{
				Tab1 previousValue = this._Tab1.Entity;
				if (((previousValue != value) 
							|| (this._Tab1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab1.Entity = null;
						previousValue.Tab3s.Remove(this);
					}
					this._Tab1.Entity = value;
					if ((value != null))
					{
						value.Tab3s.Add(this);
						this._Tab1Id = value.ID;
					}
					else
					{
						this._Tab1Id = default(int);
					}
					this.SendPropertyChanged("Tab1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tab2_Tab3", Storage="_Tab2", ThisKey="Tab2Id", OtherKey="ID", IsForeignKey=true)]
		public Tab2 Tab2
		{
			get
			{
				return this._Tab2.Entity;
			}
			set
			{
				Tab2 previousValue = this._Tab2.Entity;
				if (((previousValue != value) 
							|| (this._Tab2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab2.Entity = null;
						previousValue.Tab3s.Remove(this);
					}
					this._Tab2.Entity = value;
					if ((value != null))
					{
						value.Tab3s.Add(this);
						this._Tab2Id = value.ID;
					}
					else
					{
						this._Tab2Id = default(int);
					}
					this.SendPropertyChanged("Tab2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SearchProjectsResult
	{
		
		private System.Nullable<long> _IndexNumber;
		
		private int _ProjectID;
		
		private string _ProjectName;
		
		private System.DateTime _ProjectCreationDate;
		
		private int _ProjectStatusId;
		
		private string _ProjectStatusName;
		
		private string _UserName;
		
		private string _BookAuthor;
		
		private string _BookName;
		
		private int _BookPages;
		
		private int _ProjectFiles;
		
		public SearchProjectsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexNumber", DbType="BigInt")]
		public System.Nullable<long> IndexNumber
		{
			get
			{
				return this._IndexNumber;
			}
			set
			{
				if ((this._IndexNumber != value))
				{
					this._IndexNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int NOT NULL")]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this._ProjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this._ProjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime ProjectCreationDate
		{
			get
			{
				return this._ProjectCreationDate;
			}
			set
			{
				if ((this._ProjectCreationDate != value))
				{
					this._ProjectCreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectStatusId", DbType="Int NOT NULL")]
		public int ProjectStatusId
		{
			get
			{
				return this._ProjectStatusId;
			}
			set
			{
				if ((this._ProjectStatusId != value))
				{
					this._ProjectStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectStatusName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectStatusName
		{
			get
			{
				return this._ProjectStatusName;
			}
			set
			{
				if ((this._ProjectStatusName != value))
				{
					this._ProjectStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookAuthor", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string BookAuthor
		{
			get
			{
				return this._BookAuthor;
			}
			set
			{
				if ((this._BookAuthor != value))
				{
					this._BookAuthor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BookName
		{
			get
			{
				return this._BookName;
			}
			set
			{
				if ((this._BookName != value))
				{
					this._BookName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookPages", DbType="Int NOT NULL")]
		public int BookPages
		{
			get
			{
				return this._BookPages;
			}
			set
			{
				if ((this._BookPages != value))
				{
					this._BookPages = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectFiles", DbType="Int NOT NULL")]
		public int ProjectFiles
		{
			get
			{
				return this._ProjectFiles;
			}
			set
			{
				if ((this._ProjectFiles != value))
				{
					this._ProjectFiles = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
